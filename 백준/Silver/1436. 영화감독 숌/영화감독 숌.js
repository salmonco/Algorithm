const input = require('fs')
  .readFileSync('/dev/stdin')
  .toString()
  .trim()
  .split('\n').map(Number)
const N = input[0]
let cnt = 0
let num = 0

while (true) {
    if (String(num).includes('666')) cnt++
    if (cnt === N) {
        console.log(num)
        break
    }
    num++
}

/*
9:12

2초. 10^4

666을 포함하는 가장 작은 수
666은 연속되어야 함
규칙이 있나?

666->1
1666->2
2666->3
5666->6
6660->7
6661->8
6669->16
7666->17
8666->18
9666->19
10666->20
11666->21
15666->25
16660->26

음...어케알지
6
16
26
56
60
61
69
76
96
106
156
160
169
176
196
206

아.. 다른사람풀이 보니 규칙을 찾으려하기보단
브루트포스로 숫자 1씩 늘려가면서 연속된 666이 포함될 때마다 카운트 증가시킴
이걸 왜 생각 못 했지? 저번에도 이거 생각 못해서 어렵사리 규칙 찾아서 재귀 돌려서 푼 기억이...
일단 브루트포스로 생각해보기! 2초라 시간초과 아닌 듯.
*/